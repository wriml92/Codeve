{
  "assignments": [
    {
      "id": 1,
      "type": "theory_concept",
      "question": "파이썬에서 파일을 열 때 사용되지 않는 모드는 무엇입니까?",
      "choices": [
        "r",
        "w",
        "a",
        "x"
      ],
      "correct_answer": 4,
      "explanation": "'x' 모드는 파이썬에 존재하지 않습니다. 'r'은 읽기, 'w'는 쓰기, 'a'는 추가 모드를 의미합니다.",
      "hint": "파일 모드 중 하나는 실제로 존재하지 않습니다."
    },
    {
      "id": 2,
      "type": "metaphor",
      "question": "파일 입출력을 실생활에서의 어떤 행위에 비유할 수 있나요?",
      "choices": [
        "음식을 먹는 것",
        "책을 읽고 쓰는 것",
        "달리기",
        "수영하기"
      ],
      "correct_answer": 2,
      "explanation": "파일을 읽고 쓰는 것은 책을 읽고 쓰는 것에 가장 비슷합니다. 데이터를 취득하거나 기록하는 과정입니다.",
      "hint": "데이터와 정보의 교류를 생각해보세요."
    },
    {
      "id": 3,
      "type": "concept",
      "question": "파이썬에서 파일을 닫지 않고 사용 후에 자동으로 닫으려면 어떤 문을 사용해야 하나요?",
      "choices": [
        "close()",
        "open()",
        "with",
        "finally"
      ],
      "correct_answer": 3,
      "explanation": "'with' 문을 사용하면 파일 사용이 끝난 후 자동으로 파일을 닫을 수 있습니다.",
      "hint": "자원 관리를 위한 특별한 문법이 있습니다."
    },
    {
      "id": 4,
      "type": "analysis",
      "question": "다음 코드의 실행 결과는 무엇인가요?",
      "code_to_analyze": "with open('example.txt', 'w') as file:\n    file.write('Hello, world!')",
      "points_to_consider": [
        "'with' 문의 역할",
        "'w' 모드의 의미"
      ],
      "sample_analysis": "'with' 문은 파일을 안전하게 사용하고 자동으로 닫도록 합니다. 'w' 모드는 파일을 쓰기 모드로 열어 기존 내용을 지우고 새로운 내용을 씁니다. 따라서 'example.txt' 파일에는 'Hello, world!'라는 문구만 기록됩니다."
    },
    {
      "id": 5,
      "type": "implementation",
      "question": "파이썬을 사용하여 'log.txt' 파일에 현재 날짜와 함께 'Log entry'라는 문구를 새로운 라인에 추가하는 코드를 작성하세요.",
      "constraints": [
        "'a' 모드 사용",
        "'datetime' 모듈 사용"
      ],
      "test_cases": [
        {
          "input": "",
          "output": "2023-01-01 Log entry\n"
        },
        {
          "input": "",
          "output": "2023-01-02 Log entry\n"
        }
      ],
      "sample_solution": "from datetime import datetime\nwith open('log.txt', 'a') as file:\n    file.write(f'{datetime.now().date()} Log entry\\n')",
      "hints": [
        "'datetime.now().date()'를 사용하여 현재 날짜를 얻을 수 있습니다.",
        "'\\n'는 새로운 라인을 시작하는 데 사용됩니다."
      ]
    }
  ]
}