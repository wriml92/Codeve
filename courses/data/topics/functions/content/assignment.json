{
  "assignments": [
    {
      "id": 1,
      "type": "theory_concept",
      "question": "Python에서 함수를 정의하는 키워드는 무엇인가요?",
      "choices": [
        "class",
        "def",
        "function",
        "method"
      ],
      "correct_answer": 2,
      "explanation": "'def' 키워드는 Python에서 함수를 정의할 때 사용됩니다.",
      "hint": "Python 문서에서 함수 정의 부분을 참고하세요."
    },
    {
      "id": 2,
      "type": "metaphor",
      "question": "함수는 실생활에서 어떤 것에 비유할 수 있나요?",
      "choices": [
        "전구",
        "레시피",
        "책",
        "창문"
      ],
      "correct_answer": 2,
      "explanation": "레시피는 입력(재료)을 받아서 출력(요리)을 만들어내는 과정을 설명합니다. 마찬가지로, 함수도 입력을 받아서 출력을 만들어냅니다.",
      "hint": "입력을 받아 결과를 만들어내는 실생활 예시를 생각해보세요."
    },
    {
      "id": 3,
      "type": "concept",
      "question": "Python에서 기본값을 가진 매개변수 다음에 기본값이 없는 매개변수가 올 수 있나요?",
      "choices": [
        "예",
        "아니오"
      ],
      "correct_answer": 2,
      "explanation": "Python에서는 기본값을 가진 매개변수 뒤에 기본값이 없는 매개변수가 올 수 없습니다.",
      "hint": "함수 선언 시 매개변수 순서를 고려하세요."
    },
    {
      "id": 4,
      "type": "analysis",
      "question": "다음 코드의 결과는 무엇인가요?",
      "code_to_analyze": "def add(x, y=2):\\n    return x + y\\nprint(add(2, 3))\\nprint(add(3))",
      "points_to_consider": [
        "기본값이 있는 매개변수 사용",
        "함수 호출 시 인자 전달"
      ],
      "sample_analysis": "첫 번째 print 함수는 add(2, 3) 호출 결과로 5를 출력합니다. 두 번째 print 함수는 add(3) 호출 시 y의 기본값 2를 사용하여 결과로 5를 출력합니다."
    },
    {
      "id": 5,
      "type": "implementation",
      "question": "두 수의 최대공약수(GCD)를 반환하는 함수를 작성하세요.",
      "constraints": [
        "유클리드 호제법을 사용하세요.",
        "입력은 양의 정수입니다."
      ],
      "test_cases": [
        {
          "input": "8, 12",
          "output": "4"
        },
        {
          "input": "18, 24",
          "output": "6"
        }
      ],
      "sample_solution": "def gcd(a, b):\\n    while b != 0:\\n        a, b = b, a % b\\n    return a",
      "hints": [
        "두 수가 주어졌을 때, 큰 수를 작은 수로 나눈 나머지를 구하세요.",
        "이 과정을 반복하면서 나머지가 0이 될 때까지 계속하세요."
      ]
    }
  ]
}