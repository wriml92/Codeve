{
  "assignments": [
    {
      "id": 1,
      "type": "concept_basic",
      "content": "프로그래밍에서 'strings'의 정의는 무엇인가요?",
      "choices": [
        "여러 개의 문자를 순서대로 나열한 것",
        "숫자와 기호를 포함하는 수식",
        "데이터를 저장하는 데 사용되는 변수의 일종",
        "프로그램의 실행 흐름을 제어하는 명령어"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 2,
      "type": "concept_application",
      "content": "당신은 파이썬으로 작성된 간단한 프로그램에서 고객의 이름을 받아 환영 메시지를 출력하려고 합니다. 사용자가 이름을 'Alice'라고 입력했을 때, 이를 환영 메시지와 함께 출력하려면 어떻게 해야 할까요?",
      "choices": [
        "print('Welcome' + Alice)",
        "print('Welcome' + ' Alice')",
        "print('Welcome', 'Alice')",
        "print('Welcome' 'Alice')"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 3,
      "type": "concept_analysis",
      "content": "다음 코드를 실행하면 어떤 결과가 출력될까요?<br><br><code>greeting = 'Hello'<br>name = 'Alice'<br>print(greeting + ', ' + name + '!')</code>",
      "choices": [
        "Hello Alice",
        "Hello, Alice!",
        "Hello + ', ' + Alice + '!'",
        "Hello: Alice!"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 4,
      "type": "concept_debug",
      "content": "다음 코드에서 발생하는 오류는 무엇일까요?<br><br><code>greeting = 'Hello, '\nname = input('이름을 입력하세요: ')\nprint(greeting + name)</code>",
      "choices": [
        "변수 'greeting'가 정의되지 않았습니다",
        "입력 함수에 문제가 있습니다",
        "문자열을 합칠 때 '+' 연산자를 사용할 수 없습니다",
        "문법적인 오류는 없으나, 실행 시 오류가 발생할 수 있습니다"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 5,
      "type": "metaphor",
      "content": "프로그래밍에서의 'strings'를 일상 생활의 어떤 요소와 비교할 수 있을까요?",
      "choices": [
        "식료품 가게의 여러 제품들이 줄지어 진열된 모습",
        "도서관의 서가에 꽂혀 있는 다양한 책들",
        "컴퓨터의 여러 파일들이 폴더 안에 저장된 모습",
        "수도관을 통해 흐르는 물의 연속된 흐름"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 6,
      "type": "theory_concept",
      "content": "카페에서 커피를 주문하고 이름을 말했을 때, 바리스타가 커피 컵에 이름을 적는 상황을 생각해봅시다.<br><br><code>name = 'Alex'<br>coffee_cup = 'Coffee for ' + name</code><br><br>이 코드의 결과는 실생활에서 무엇과 같을까요?",
      "choices": [
        "바리스타가 커피 컵에 'Coffee for Alex'라고 적는 것",
        "커피를 주문할 때 카페 메뉴를 보는 것",
        "커피를 마시는 손님의 이름을 불러주는 것",
        "카페의 커피 머신이 고장 나는 것"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 7,
      "type": "concept_synthesis",
      "content": "문제를 준비 중입니다.",
      "choices": [
        "준비 중",
        "준비 중",
        "준비 중",
        "준비 중"
      ],
      "test_cases": null,
      "constraints": null
    },
    {
      "id": 8,
      "type": "implementation_playground",
      "content": "아래 제공된 파이썬 코드를 실행해보세요. 그 후에, 문자열을 다른 단어로 바꿔서 실행해보고, 결과가 어떻게 바뀌는지 관찰해보세요. 그리고 문자열 연산자 '+'를 사용하여 두 문자열을 연결해보세요. 마지막으로 문자열의 길이를 확인하는 len() 함수를 사용해 문자열의 길이를 출력해보세요.",
      "choices": null,
      "test_cases": [
        {
          "input": "message = 'Hello, World!'\nprint(message)",
          "output": "Hello, World!"
        },
        {
          "input": "message = 'Goodbye, World!'\nprint(message)",
          "output": "Goodbye, World!"
        },
        {
          "input": "greeting = 'Hello, '\nname = 'Alice'\nmessage = greeting + name\nprint(message)",
          "output": "Hello, Alice"
        },
        {
          "input": "message = 'Hello, World!'\nprint(len(message))",
          "output": "13"
        }
      ],
      "constraints": null
    },
    {
      "id": 9,
      "type": "implementation_modify",
      "content": "다음 코드는 사용자의 이름을 입력받아 인사말을 생성하는 프로그램입니다. 하지만 인사말에 사용자의 이름이 포함되도록 코드의 빈 부분을 채워주세요. 비전공자가 처음 프로그래밍을 배우는 상황을 감안하여 매우 간단한 문제입니다.",
      "choices": null,
      "test_cases": [
        {
          "input": "name = input('당신의 이름을 입력해주세요: ')\ngreeting = '안녕하세요, ___! 오늘도 좋은 하루 보내세요.'\nprint(greeting.format(___))",
          "output": "안녕하세요, 철수! 오늘도 좋은 하루 보내세요."
        },
        {
          "input": "name = input('당신의 이름을 입력해주세요: ')\ngreeting = '반가워요, ___! 즐거운 시간 되세요.'\nprint(greeting.format(___))",
          "output": "반가워요, 영희! 즐거운 시간 되세요."
        }
      ],
      "constraints": null
    },
    {
      "id": 10,
      "type": "implementation_creative",
      "content": "당신은 이름 생성기 프로그램을 만들고 있습니다. 사용자의 이름과 좋아하는 숫자를 받아서, 그 숫자만큼 이름 뒤에 별표(*)를 붙여주는 기능을 추가해보세요. 예를 들어, 사용자의 이름이 'Alex'이고 좋아하는 숫자가 3이라면, 결과는 'Alex***'가 되어야 합니다.",
      "choices": null,
      "test_cases": [
        {
          "input": "name = 'Alex'\nfavorite_number = 3\noutput = name + '*' * favorite_number",
          "output": "Alex***"
        },
        {
          "input": "name = 'Sam'\nfavorite_number = 5\noutput = name + '*' * favorite_number",
          "output": "Sam*****"
        }
      ],
      "constraints": null
    }
  ],
  "metadata": {
    "version": 1,
    "created_at": "2025-01-26T06:18:37.329578"
  }
}