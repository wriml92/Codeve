{
  "assignments": [
    {
      "id": 1,
      "type": "theory_concept",
      "question": "파이썬에서 리스트는 어떤 유형의 데이터도 포함할 수 있습니다. 이는 리스트가 다음 중 어떤 특성을 가지고 있다는 것을 의미합니까?",
      "choices": [
        "정적 타이핑",
        "동적 타이핑",
        "강타입",
        "약타입"
      ],
      "correct_answer": 2,
      "explanation": "파이썬은 동적 타입 언어로서, 리스트에 다양한 데이터 유형을 섞어서 저장할 수 있습니다.",
      "hint": "파이썬 변수는 실행 시간에 타입이 결정됩니다."
    },
    {
      "id": 2,
      "type": "metaphor",
      "question": "파이썬 리스트를 실생활의 어떤 것에 비유할 수 있나요?",
      "choices": [
        "책장에 꽂힌 책들",
        "일렬로 세워진 병사들",
        "닫힌 상자",
        "벽에 걸린 그림"
      ],
      "correct_answer": 1,
      "explanation": "파이썬 리스트를 책장에 꽂힌 책들에 비유할 수 있습니다. 각 책은 리스트의 다른 항목을 나타내며, 원하는 책을 선택하거나 책장에 새 책을 추가할 수 있습니다.",
      "hint": "이 구조는 순서가 있고, 요소를 추가하거나 제거할 수 있습니다."
    },
    {
      "id": 3,
      "type": "concept",
      "question": "다음 중 파이썬 리스트의 인덱스를 올바르게 설명한 것은 무엇입니까?",
      "choices": [
        "0부터 시작한다",
        "1부터 시작한다",
        "마이너스 인덱스는 리스트의 끝에서 시작한다",
        "인덱스는 문자열만 가능하다"
      ],
      "correct_answer": 1,
      "explanation": "파이썬 리스트의 인덱스는 0부터 시작하며, 마이너스 인덱스를 사용하여 리스트의 끝에서부터 역순으로 접근할 수 있습니다.",
      "hint": "대부분의 프로그래밍 언어에서 컬렉션의 첫 번째 요소 인덱스는 0입니다."
    },
    {
      "id": 4,
      "type": "analysis",
      "question": "다음 코드가 출력하는 것은 무엇입니까?",
      "code_to_analyze": "numbers = [1, 2, 3, 4, 5]\nprint(numbers[1:4])",
      "points_to_consider": [
        "슬라이싱의 시작 인덱스",
        "슬라이싱의 종료 인덱스",
        "리스트의 인덱싱 방법"
      ],
      "sample_analysis": "이 코드는 numbers 리스트에서 인덱스 1에서 3까지의 요소를 슬라이싱하여 출력합니다. 결과적으로 [2, 3, 4]가 출력됩니다."
    },
    {
      "id": 5,
      "type": "implementation",
      "question": "주어진 숫자 리스트에서 짝수만 포함하는 새 리스트를 생성하는 파이썬 코드를 작성하세요.",
      "constraints": [
        "리스트 내포(list comprehension)를 사용하세요.",
        "결과 리스트에 중복된 숫자가 없어야 합니다."
      ],
      "test_cases": [
        {
          "input": "[1, 2, 3, 4, 5, 2]",
          "output": "[2, 4]"
        },
        {
          "input": "[10, 11, 12, 13, 14, 15]",
          "output": "[10, 12, 14]"
        }
      ],
      "sample_solution": "result = sorted(list(set([x for x in input_list if x % 2 == 0])))",
      "hints": [
        "set 함수는 리스트에서 중복을 제거합니다.",
        "리스트 내포를 사용하여 조건에 맞는 요소만 선택할 수 있습니다."
      ]
    }
  ]
}