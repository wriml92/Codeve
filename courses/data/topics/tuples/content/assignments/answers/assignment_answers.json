{
  "assignments": [
    {
      "id": 1,
      "type": "concept_basic",
      "correct_answer": "3",
      "hint": "튜플은 한 번 생성되면 그 내용을 변경할 수 없습니다."
    },
    {
      "id": 2,
      "type": "concept_application",
      "correct_answer": "2",
      "hint": "튜플(tuple)은 변경할 수 없는(immutable) 객체의 시퀀스로, 각 요소가 서로 다른 데이터 타입을 가질 수 있습니다. 이를 통해 여러 값을 묶어서 하나의 관련 있는 단위로 다룰 수 있습니다."
    },
    {
      "id": 3,
      "type": "concept_analysis",
      "correct_answer": "1",
      "hint": "준비 중입니다."
    },
    {
      "id": 4,
      "type": "concept_debug",
      "correct_answer": "1",
      "hint": "튜플(tuple)은 한 번 생성되면 그 내용을 변경할 수 없는 불변(immutable) 타입입니다. 튜플에 있는 요소를 변경하려고 시도하면 오류가 발생합니다."
    },
    {
      "id": 5,
      "type": "metaphor",
      "correct_answer": "2",
      "hint": "tuples는 한번 정해지면 변경할 수 없는 것을 의미합니다. 이를 일상생활에 비유한다면, 어떤 것이 이미 결정되어 변경할 수 없는지 생각해보세요."
    },
    {
      "id": 6,
      "type": "theory_concept",
      "correct_answer": "3",
      "hint": "주어진 코드는 주문한 아이템들의 이름과 가격을 튜플 형태로 저장하고 있으며, 'coffee_price'와 'cake_price'는 각각 커피와 케이크의 가격을 나타내는 변수입니다."
    },
    {
      "id": 7,
      "type": "concept_synthesis",
      "correct_answer": "1",
      "hint": "이 코드에서 'person'은 괄호()를 사용하여 여러 값을 저장하는 튜플입니다. 튜플의 각 요소는 쉼표로 구분되며, 튜플의 분해(unpacking)를 통해 각 값을 개별 변수에 할당하고 있습니다."
    },
    {
      "id": 8,
      "type": "implementation_playground",
      "test_cases": [
        {
          "input": "my_tuple = (1, 2, 3)\nprint('Original tuple:', my_tuple)\nprint('First element:', my_tuple[0])\nprint('Last element:', my_tuple[-1])",
          "output": "Original tuple: (1, 2, 3)\nFirst element: 1\nLast element: 3"
        },
        {
          "input": "my_tuple = (4, 5, 6)\nprint('Original tuple:', my_tuple)\nprint('First element:', my_tuple[0])\nprint('Last element:', my_tuple[-1])",
          "output": "Original tuple: (4, 5, 6)\nFirst element: 4\nLast element: 6"
        },
        {
          "input": "my_tuple = ('apple', 'banana', 'cherry')\nprint('Original tuple:', my_tuple)\nprint('First element:', my_tuple[0])\nprint('Last element:', my_tuple[-1])",
          "output": "Original tuple: ('apple', 'banana', 'cherry')\nFirst element: apple\nLast element: cherry"
        }
      ],
      "hint": "이 코드는 튜플의 요소를 출력하는 방법을 보여줍니다. 'my_tuple[0]'는 튜플의 첫 번째 요소를, 'my_tuple[-1]'는 튜플의 마지막 요소를 참조합니다. 튜플 내의 요소를 변경하려고 할 때 파이썬이 어떤 반응을 보이는지 확인하기 위해, 'my_tuple[0] = 10'과 같이 코드를 작성하고 결과를 관찰해보세요. 튜플은 수정할 수 없기 때문에, 이런 종류의 변경을 시도할 때 오류 메시지가 나타날 것입니다."
    },
    {
      "id": 9,
      "type": "implementation_modify",
      "test_cases": [
        {
          "input": "person_info = ('Alice', 'Smith')\n# 여기에 나이와 직업을 추가하세요\nperson_info += (_____, _____)\n\nprint('Complete Tuple:', person_info)",
          "output": "Complete Tuple: ('Alice', 'Smith', 30, 'Engineer')"
        },
        {
          "input": "person_info = ('Bob', 'Johnson')\n# 여기에 나이와 직업을 추가하세요\nperson_info += (_____, _____)\n\nprint('Complete Tuple:', person_info)",
          "output": "Complete Tuple: ('Bob', 'Johnson', 25, 'Artist')"
        }
      ],
      "hint": "빈 부분에 들어갈 내용은 사람의 나이와 직업을 나타내는 두 가지 값을 넣어야 합니다. 예를 들어, 30과 'Engineer'를 넣으면 튜플이 ('Alice', 'Smith', 30, 'Engineer')로 완성됩니다."
    },
    {
      "id": 10,
      "type": "implementation_creative",
      "test_cases": [
        {
          "input": "today_info = ('좋음', '맑음')\nactivity_decision(today_info)",
          "output": "'산책하기'"
        },
        {
          "input": "today_info = ('나쁨', '비')\nactivity_decision(today_info)",
          "output": "'집에서 영화 보기'"
        }
      ],
      "hint": "힌트: \n- 변수 'today_info'는 오늘의 기분과 날씨 정보를 담은 튜플입니다.\n- 함수 'activity_decision'은 튜플을 인자로 받아 활동을 결정해주는 함수입니다.\n- 코드를 작성할 때, 'today_info' 튜플을 먼저 만들고 'activity_decision' 함수에 이를 인자로 넘겨 호출하세요.\n- 예를 들어, 오늘 기분이 좋고 날씨가 맑으면 '산책하기'와 같은 활동을 반환할 수 있습니다."
    }
  ],
  "metadata": {
    "version": 1,
    "created_at": "2025-01-26T06:21:12.777259"
  }
}