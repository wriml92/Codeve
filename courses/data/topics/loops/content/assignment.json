{
  "assignments": [
    {
      "id": 1,
      "type": "theory_concept",
      "question": "파이썬에서 'for' 반복문은 어떤 경우에 사용되나요?",
      "choices": [
        "정해진 횟수만큼 반복할 때",
        "조건에 따라 반복할 때",
        "리스트나 튜플과 같은 시퀀스를 순회할 때",
        "오류가 발생할 때까지 반복할 때"
      ],
      "correct_answer": 3,
      "explanation": "'for' 반복문은 주로 리스트나 튜플 같은 시퀀스를 순회할 때 사용됩니다.",
      "hint": "'for' 반복문은 시퀀스의 각 요소에 대해 코드 블록을 실행합니다."
    },
    {
      "id": 2,
      "type": "metaphor",
      "question": "'while' 반복문을 실생활 상황에 비유한다면 어떤 예가 가장 적절할까요?",
      "choices": [
        "책의 모든 페이지를 넘기기",
        "음악이 끝날 때까지 댄스",
        "레시피에 나온 모든 단계를 따르기",
        "커피가 다 될 때까지 기다리기"
      ],
      "correct_answer": 4,
      "explanation": "'while' 반복문은 조건이 참인 동안 반복되므로, 커피가 다 될 때까지 기다리는 것과 비슷합니다.",
      "hint": "'while' 반복문은 조건이 거짓이 될 때까지 코드를 반복 실행합니다."
    },
    {
      "id": 3,
      "type": "concept",
      "question": "다음 중 'for' 반복문을 사용할 때 발생할 수 있는 오류는 무엇인가요?",
      "choices": [
        "IndentationError",
        "SyntaxError",
        "TypeError",
        "모두 가능"
      ],
      "correct_answer": 4,
      "explanation": "반복문 작성 시 들여쓰기를 잘못하면 IndentationError, 문법을 잘못하면 SyntaxError, 반복할 수 없는 타입을 반복하려 하면 TypeError가 발생할 수 있습니다.",
      "hint": "반복문은 문법, 들여쓰기, 반복 가능한 객체에 관한 오류를 발생시킬 수 있습니다."
    },
    {
      "id": 4,
      "type": "analysis",
      "question": "다음 코드의 출력 결과는 무엇인가요?",
      "code_to_analyze": "for i in range(5):\n    if i == 3:\n        continue\n    print(i)",
      "points_to_consider": [
        "range 함수의 작동 방식",
        "continue 문의 역할",
        "print 함수의 호출 횟수"
      ],
      "sample_analysis": "이 코드는 0부터 4까지 숫자를 출력하지만, 'if' 조건문 때문에 3은 건너뛰고 출력됩니다. 따라서 결과는 0, 1, 2, 4입니다."
    },
    {
      "id": 5,
      "type": "implementation",
      "question": "1부터 100까지의 숫자 중에서 짝수만 리스트에 추가하여 출력하는 파이썬 코드를 작성하시오.",
      "constraints": [
        "'for' 또는 'while' 반복문 사용",
        "리스트 컴프리헨션 사용 금지"
      ],
      "test_cases": [
        {
          "input": "",
          "output": "[2, 4, 6, 8, ..., 100]"
        }
      ],
      "sample_solution": "even_numbers = []\nfor i in range(1, 101):\n    if i % 2 == 0:\n        even_numbers.append(i)\nprint(even_numbers)",
      "hints": [
        "1부터 100까지 반복하기 위해 range 함수 사용",
        "짝수 조건은 숫자를 2로 나눈 나머지가 0인 경우"
      ]
    }
  ]
}