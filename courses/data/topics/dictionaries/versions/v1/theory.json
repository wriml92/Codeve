{
  "content": "```html\n<!-- 1. 개념 소개 섹션 -->\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-black-600 mb-3\">개념 소개</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        파이썬에서 사전(dictionary)은 키(key)와 값(value)의 쌍을 저장하는 자료형입니다. 사전은 중괄호({})를 사용해 생성하며, 키와 값은 콜론(:)으로 구분합니다. 키를 통해 값을 빠르게 찾을 수 있어 정보를 관리하는데 효율적입니다. 키는 변경할 수 없는(immutable) 타입이어야 하며, 문자열, 숫자, 튜플 등이 사용될 수 있습니다. 값에는 어떤 타입이든 사용할 수 있습니다.\n    </p>\n</section>\n\n<!-- 2. 실생활 비유 섹션 -->\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-black-600 mb-3\">실생활 비유</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        사전(dictionary)를 진짜 사전에 비유해보면 이해하기 쉽습니다. 사전에서 단어(키)를 찾으면 그 단어의 뜻(값)을 알 수 있죠. 파이썬의 사전도 같은 원리로 동작합니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">\n# 파이썬 사전 생성\ndictionary = {'apple': '사과', 'banana': '바나나', 'cherry': '체리'}\nprint(dictionary['apple'])  # 'apple'이라는 키로 '사과'값을 찾아냅니다.\n        </pre>\n        <p class=\"text-green-400 mt-2\"># 출력 결과: 사과</p>\n    </div>\n</section>\n\n<!-- 3. 핵심 포인트 섹션 -->\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-black-600 mb-3\">핵심 포인트</h2>\n    <ul class=\"list-disc list-inside space-y-2 text-gray-800\">\n        <li>사전은 키와 값의 쌍으로 이루어져 있습니다. 키를 통해 값을 빠르게 찾을 수 있습니다.</li>\n        <li>키는 중복될 수 없습니다. 즉, 하나의 사전에 같은 키가 두 번 이상 존재할 수 없습니다.</li>\n        <li>키는 변경 불가능한 자료형만 사용할 수 있습니다. 문자열, 숫자, 튜플 등이 사용될 수 있습니다.</li>\n        <li>값은 어떤 자료형도 가능합니다. 즉, 리스트나 사전 등도 값으로 사용할 수 있습니다.</li>\n    </ul>\n</section>\n\n<!-- 4. 주의사항 섹션 -->\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold mb-3\">주의사항</h2>\n    <ul class=\"list-decimal list-inside space-y-2 text-gray-800\">\n        <li>키가 사전에 존재하지 않는 경우, 키를 참조하면 오류가 발생합니다. 이 경우 get() 함수를 사용해 존재하지 않는 키에 대해 None이나 기본값을 반환하도록 할 수 있습니다.</li>\n        <li>변경 가능한(mutable) 자료형은 키로 사용할 수 없습니다. 따라서 리스트는 키로 사용할 수 없습니다.</li>\n    </ul>\n</section>\n```",
  "metadata": {
    "version": 1,
    "created_at": "2025-01-22T04:38:58.978591",
    "quality_score": 60.0
  }
}