{
  "content": "# 출력 데이터\n{\n  \"quiz_content\": \"<div class=\\\"space-y-8\\\">\\n    <!-- 개념 이해 문제 -->\\n    <section class=\\\"bg-white rounded-lg shadow-sm p-6\\\">\\n        <h2 class=\\\"text-lg font-semibold text-gray-800 mb-4\\\">개념 이해</h2>\\n        <div class=\\\"prose max-w-none text-gray-600\\\">\\n            <p>다음 중 클래스에 대한 설명으로 옳지 않은 것은 무엇인가요?</p>\\n            <div class=\\\"mt-4 space-y-2\\\">\\n                <div class=\\\"flex items-center\\\">\\n                    <input type=\\\"radio\\\" name=\\\"q1\\\" value=\\\"0\\\" class=\\\"mr-2\\\">\\n                    <label>클래스는 객체를 생성하기 위한 틀이라고 볼 수 있다.</label>\\n                </div>\\n                <div class=\\\"flex items-center\\\">\\n                    <input type=\\\"radio\\\" name=\\\"q1\\\" value=\\\"1\\\" class=\\\"mr-2\\\">\\n                    <label>클래스를 이용하면 동일한 행동 및 속성을 가진 객체를 여러 번 생성할 수 없다.</label>\\n                </div>\\n                <div class=\\\"flex items-center\\\">\\n                    <input type=\\\"radio\\\" name=\\\"q1\\\" value=\\\"2\\\" class=\\\"mr-2\\\">\\n                    <label>클래스의 메소드를 정의할 때는 첫 번째 인자로 'self'를 포함해야 한다.</label>\\n                </div>\\n                <div class=\\\"flex items-center\\\">\\n                    <input type=\\\"radio\\\" name=\\\"q1\\\" value=\\\"3\\\" class=\\\"mr-2\\\">\\n                    <label>객체의 속성에 직접 접근하는 대신, getter와 setter 같은 메소드를 통해 접근하는 것이 좋다.</label>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n\\n    <!-- 코드 분석 문제 -->\\n    <section class=\\\"bg-white rounded-lg shadow-sm p-6\\\">\\n        <h2 class=\\\"text-lg font-semibold text-gray-800 mb-4\\\">코드 분석</h2>\\n        <div class=\\\"prose max-w-none text-gray-600\\\">\\n            <p>다음 코드가 수행된 후의 출력 결과를 예상해보세요.</p>\\n            <div class=\\\"bg-gray-900 rounded-lg p-4 my-4\\\">\\n                <pre class=\\\"text-white font-mono text-sm overflow-x-auto\\\">\\nclass Cookie:\\n    def __init__(self, flavor):\\n        self.flavor = flavor\\n\\n    def show_flavor(self):\\n        print(\\\"This cookie is\\\", self.flavor)\\n\\n\\nchoco_cookie = Cookie(\\\"chocolate\\\")\\nstrawberry_cookie = Cookie(\\\"strawberry\\\")\\n\\nchoco_cookie.show_flavor()\\nstrawberry_cookie.show_flavor()\\n                </pre>\\n            </div>\\n            <div class=\\\"mt-4\\\">\\n                <p>테스트 케이스:</p>\\n                <ul class=\\\"list-disc list-inside\\\">\\n                    <li>입력: 없음 → 출력: This cookie is chocolate<br> This cookie is strawberry</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </section>\\n\\n    <!-- 코드 구현 문제 -->\\n    <section class=\\\"bg-white rounded-lg shadow-sm p-6\\\">\\n        <h2 class=\\\"text-lg font-semibold text-gray-800 mb-4\\\">코드 구현</h2>\\n        <div class=\\\"prose max-w-none text-gray-600\\\">\\n            <p>다음과 같은 기능을 가지는 'Car' 클래스를 구현해보세요.</p>\\n            <ul class=\\\"list-disc list-inside\\\">\\n                <li>객체 생성 시 'color'와 'speed' 속성 설정</li>\\n                <li>'accelerate' 메소드: 스피드를 10 증가</li>\\n                <li>'break' 메소드: 스피드를 10 감소</li>\\n                <li>'get_speed' 메소드: 현재 스피드 출력</li>\\n            </ul>\\n            <div class=\\\"bg-gray-900 rounded-lg p-4 my-4\\\">\\n                <pre class=\\\"text-white font-mono text-sm overflow-x-auto\\\">\\n# 클래스 구현\\nclass Car:\\n    pass\\n\\n# 객체 생성 및 메소드 사용 예시\\nmy_car = Car(\\\"red\\\", 0)\\nmy_car.accelerate()\\nmy_car.get_speed()  # 출력: 10\\nmy_car.break()\\nmy_car.get_speed()  # 출력: 0\\n                </pre>\\n            </div>\\n            <div class=\\\"mt-4\\\">\\n                <p>테스트 케이스:</p>\\n                <ul class=\\\"list-disc list-inside\\\">\\n                    <li>입력: 없음 → 출력: 10, 0</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </section>\\n</div>\"\n}",
  "metadata": {
    "created_at": "2025-01-22T07:44:47.297231",
    "version": 1
  }
}