{
  "content": "<div class=\"space-y-8\">\n    <!-- 실습 설명 -->\n    <section class=\"bg-white rounded-lg shadow-sm p-6\">\n        <h2 class=\"text-lg font-semibold text-gray-800 mb-4\">실습 설명</h2>\n        <div class=\"prose max-w-none text-gray-600\">\n            <p>이번 실습에서는 Python에서 예외 처리를 하는 방법에 대해 알아봅니다. 예외 처리는 프로그램이 예상치 못한 오류를 만났을 때, 그 오류를 관리하고 프로그램의 중단 없이 계속 진행할 수 있도록 하는 기법입니다.</p>\n            <p>Python에서는 try-except 문을 사용하여 예외 처리를 합니다. 또한 else와 finally 절을 이용하여 예외가 발생하지 않았을 때, 그리고 예외 발생 여부와 관계없이 실행해야 할 코드를 정의할 수 있습니다.</p>\n            <p>이번 실습에서는 간단한 나누기 연산을 수행하는 코드를 작성하고, 0으로 나누려는 시도를 예외 처리를 통해 관리하는 방법을 배웁니다.</p>\n        </div>\n    </section>\n\n    <!-- 예제 코드 -->\n    <section class=\"bg-white rounded-lg shadow-sm p-6\">\n        <h2 class=\"text-lg font-semibold text-gray-800 mb-4\">예제 코드</h2>\n        <div class=\"bg-gray-900 rounded-lg p-4\">\n            <pre class=\"text-white font-mono text-sm overflow-x-auto\">\n# 예외 처리를 위한 코드\ntry:\n    # 두 수를 입력 받습니다.\n    num1 = int(input(\"Enter a number: \"))\n    num2 = int(input(\"Enter another number: \"))\n\n    # 나눗셈을 수행합니다.\n    result = num1 / num2\n\n# 0으로 나누는 오류를 처리합니다.\nexcept ZeroDivisionError:\n    print(\"Error: You can't divide by zero!\")\n\n# 그 외 오류를 처리합니다.\nexcept Exception as e:\n    print(\"Error: \", str(e))\n\n# 예외가 발생하지 않았을 때 실행됩니다.\nelse:\n    print(\"The result is \", result)\n\n# 예외 발생 여부와 관계없이 항상 실행됩니다.\nfinally:\n    print(\"Thank you for using our calculator!\")\n            </pre>\n        </div>\n        <div class=\"mt-4 text-sm text-gray-500\">\n            <p>* 코드를 복사하여 VSCode에 붙여넣기 할 수 있습니다.</p>\n        </div>\n    </section>\n\n    <!-- 실행 방법 -->\n    <section class=\"bg-white rounded-lg shadow-sm p-6\">\n        <h2 class=\"text-lg font-semibold text-gray-800 mb-4\">실행 방법</h2>\n        <ol class=\"list-decimal list-inside space-y-3 text-gray-600\">\n            <li class=\"pl-2\">VSCode에서 새 파일 만들기</li>\n            <li class=\"pl-2\">위의 예제 코드를 입력하기</li>\n            <li class=\"pl-2\">파일을 .py 확장자로 저장하기</li>\n            <li class=\"pl-2\">코드 실행 후 결과 확인하기</li>\n        </ol>\n    </section>\n\n    <!-- 주의사항 -->\n    <section class=\"bg-white rounded-lg shadow-sm p-6\">\n        <h2 class=\"text-lg font-semibold text-gray-800 mb-4\">주의사항</h2>\n        <ul class=\"list-disc list-inside space-y-3 text-gray-600\">\n            <li class=\"pl-2\">예외 처리를 할 때는 try 문 안에서 발생할 수 있는 예외를 정확하게 예측하고 그에 맞는 처리를 해야 합니다.</li>\n            <li class=\"pl-2\">except 절은 위에서부터 아래로 순서대로 실행되며, 가장 먼저 일치하는 예외를 찾으면 그 이후의 except 절은 무시됩니다. 그러므로 범위가 넓은 예외 처리는 다른 except 절들 아래에 위치해야 합니다.</li>\n            <li class=\"pl-2\">else 절은 예외가 발생하지 않았을 때 실행되는 코드고, finally 절은 예외 발생 여부와 관계없이 항상 실행되는 코드입니다. 이 두 절은 선택적으로 사용할 수 있습니다.</li>\n        </ul>\n    </section>\n</div>",
  "metadata": {
    "created_at": "2025-01-22T12:00:27.096456",
    "version": 1
  }
}