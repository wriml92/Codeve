{
  "assignments": [
    {
      "id": 1,
      "type": "theory_concept",
      "question": "Python에서 예외를 처리하는 구조는 무엇인가요?",
      "choices": [
        "if-else 구조",
        "try-except 구조",
        "for-while 구조",
        "def-class 구조"
      ],
      "correct_answer": 2,
      "explanation": "try-except 구조는 Python에서 예외를 처리하기 위해 사용됩니다.",
      "hint": "예외 처리를 위한 특별한 문법이 있습니다."
    },
    {
      "id": 2,
      "type": "metaphor",
      "question": "집을 나서기 전에 우산을 챙기는 행위를 예외 처리와 비교한다면, 우산을 챙기는 이유는 무엇과 가장 비슷할까요?",
      "choices": [
        "예상 가능한 오류를 미리 방지하기 위해",
        "더 빠르게 목적지에 도착하기 위해",
        "운동하기 위해",
        "일기 예보를 확인하기 위해"
      ],
      "correct_answer": 1,
      "explanation": "우산을 챙기는 행위는 예상 가능한 오류(비가 올 경우)를 미리 방지하기 위함과 유사합니다.",
      "hint": "우산은 비를 대비하는 도구입니다."
    },
    {
      "id": 3,
      "type": "concept",
      "question": "다음 중 예외 처리에 해당하지 않는 것은 무엇인가요?",
      "choices": [
        "try-except",
        "if-else",
        "except-else",
        "try-finally"
      ],
      "correct_answer": 2,
      "explanation": "if-else 구조는 조건에 따른 분기 처리를 위한 것으로, 예외 처리 구조와는 다릅니다.",
      "hint": "예외 처리는 특정한 에러에 대응하기 위한 구조입니다."
    },
    {
      "id": 4,
      "type": "analysis",
      "question": "다음 코드의 실행 결과는 무엇일까요?",
      "code_to_analyze": "try:\n    print(1/0)\nexcept ZeroDivisionError:\n    print('Cannot divide by zero')\nfinally:\n    print('Execution completed')",
      "points_to_consider": [
        "ZeroDivisionError 예외 처리",
        "finally 절의 용도"
      ],
      "sample_analysis": "'Cannot divide by zero' 다음에 'Execution completed'가 출력됩니다. ZeroDivisionError 때문에 예외가 발생하고, finally 절은 예외 발생 여부와 상관없이 실행됩니다."
    },
    {
      "id": 5,
      "type": "implementation",
      "question": "사용자로부터 숫자를 입력받아 그 숫자의 제곱을 출력하는 프로그램을 작성하되, 숫자 외의 입력을 받으면 '유효한 숫자를 입력해주세요.'라고 출력하는 예외 처리를 포함하세요.",
      "constraints": [
        "input 함수 사용",
        "try-except 구조 사용"
      ],
      "test_cases": [
        {
          "input": "4",
          "output": "16"
        },
        {
          "input": "a",
          "output": "유효한 숫자를 입력해주세요."
        }
      ],
      "sample_solution": "number = input('숫자를 입력하세요: ')\ntry:\n    number = float(number)\n    print(number ** 2)\nexcept ValueError:\n    print('유효한 숫자를 입력해주세요.')",
      "hints": [
        "input으로 받은 값을 float로 변환 시도",
        "ValueError 예외 처리"
      ]
    }
  ]
}