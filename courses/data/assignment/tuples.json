{
  "topic_id": "tuples",
  "topic_name": "튜플",
  "content": "## 입력 예시\n```json\n{\n    \"theory_content\": \"튜플은 불변성(immutable)을 가지는 자료형입니다. 원소의 값을 변경할 수 없습니다. 이를 비유하면, 튜플은 메뉴판과 같습니다. 메뉴판에 있는 메뉴를 임의로 변경할 수 없는 것처럼, 튜플의 요소도 변경할 수 없습니다.\",\n    \"practice_content\": \"테스트를 위해 튜플을 생성해봅시다. \\n\\n```python\\ntup = ('apple', 'banana', 'cherry')\\nprint(tup)\\n```\\n\\n이 코드를 실행하면, 튜플의 내용을 출력합니다. \\n\\n```python\\n('apple', 'banana', 'cherry')\\n```\",\n    \"topic\": \"튜플\"\n}\n```\n\n## 출력 예시\n\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 1: 개념 이해</h2>\n    <p class=\"mb-4\">튜플의 특성에 대한 설명 중 올바르지 않은 것은 무엇인가요?</p>\n    <ol class=\"list-decimal list-inside space-y-2 mb-4\">\n        <li>튜플은 불변성을 가지는 자료형이다.</li>\n        <li>튜플의 원소는 변경할 수 없다.</li>\n        <li>튜플은 메뉴판과 같이 원소를 임의로 변경할 수 없다.</li>\n        <li>튜플의 원소는 필요에 따라 얼마든지 변경할 수 있다.</li>\n    </ol>\n    <div class=\"hidden\">정답: 4번. 튜플은 불변성을 가지는 자료형으로 원소를 변경할 수 없습니다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 2: 코드 분석</h2>\n    <p class=\"mb-4\">아래 코드를 실행했을 때 출력되는 결과는 무엇인가요?</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\ntup = ('apple', 'banana', 'cherry')\ntup[0] = 'orange'\nprint(tup)\n        </pre>\n    </div>\n    <div class=\"hidden\">정답: 이 코드는 실행되지 않습니다. 튜플은 불변성을 가지기 때문에, 튜플의 원소를 직접 변경하는 것은 불가능합니다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 3: 코드 구현</h2>\n    <p class=\"mb-4\">아래 코드를 완성하여 튜플의 첫 번째 원소를 출력하는 코드를 작성하세요.</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\ntup = ('apple', 'banana', 'cherry')\n        </pre>\n    </div>\n    <div class=\"hidden\">\n        테스트 케이스:\n        tup = ('apple', 'banana', 'cherry')\n        정답 예시:\n        print(tup[0])\n    </div>\n</section>\n```",
  "course_id": "python",
  "theory_based_on": "```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">개념 소개</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        튜플은 파이썬에서 사용하는 데이터 타입 중 하나로, 여러 값을 하나의 변수에 저장할 수 있습니다. 리스트와 비슷해 보이지만 튜플은 한 번 생성하면 그 요소를 변경하거나 삭제할 수 없습니다. 즉, 튜플은 불변(immutable)이라는 특성을 가지고 있습니다. 튜플은 괄호 ( ) 안에 쉼표로 구분된 요소를 넣어 생성하며, 요소가 하나인 튜플을 생성할 때는 요소 뒤에 쉼표를 붙여야 합니다.\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">비유</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        튜플을 생각하면 '시간 여행'을 떠올려 보세요. 시간 여행을 하면 과거로 돌아갈 수 있지만, 이미 지나간 과거의 사건을 바꿀 수는 없습니다. 마찬가지로 튜플은 한 번 생성된 후에는 그 값들을 바꿀 수 없습니다. 대체 비유로는 '커피 캡슐'을 생각해볼 수 있습니다. 커피 캡슐은 한 번 만들어지면 그 안의 커피를 바꿀 수 없습니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">my_tuple = (1, 2, 3)\nprint(my_tuple[1])</pre>\n        <p class=\"text-green-400 mt-2\"># 출력 결과: 2</p>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">핵심 포인트</h2>\n    <ul class=\"list-disc list-inside space-y-2 text-gray-800\">\n        <li>튜플은 불변입니다. 즉, 튜플의 요소는 생성 후에 변경하거나 삭제할 수 없습니다. 예: my_tuple[0] = 4 # 에러 발생</li>\n        <li>튜플은 괄호( )를 사용하여 생성하며, 요소들은 쉼표로 구분합니다. 예: my_tuple = (1, 2, 3)</li>\n        <li>요소가 하나인 튜플을 생성할 때는 요소 뒤에 쉼표를 붙여야 합니다. 예: single_element_tuple = (4,)</li>\n        <li>튜플은 인덱싱과 슬라이싱이 가능합니다. 예: my_tuple[1], my_tuple[1:3]</li>\n    </ul>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold mb-3\">주의사항</h2>\n    <ul class=\"list-decimal list-inside space-y-2 text-gray-800\">\n        <li>튜플은 불변이므로, 요소를 변경하거나 삭제하려고 하면 에러가 발생합니다.</li>\n        <li>요소가 하나인 튜플을 생성할 때 요소 뒤에 쉼표를 붙여야 합니다. 쉼표가 없으면 그냥 숫자로 인식됩니다.</li>\n        <li>튜플의 요소로 리스트 같은 가변 객체를 넣을 수 있지만, 그 리스트 자체를 변경하거나 삭제할 수는 없습니다.</li>\n    </ul>\n</section>\n```",
  "practice_based_on": "## 입력\n```json\n{\n    \"theory_content\": \"<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">개념 소개</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        튜플은 파이썬에서 사용하는 데이터 타입 중 하나로, 여러 값을 하나의 변수에 저장할 수 있습니다. 리스트와 비슷해 보이지만 튜플은 한 번 생성하면 그 요소를 변경하거나 삭제할 수 없습니다. 즉, 튜플은 불변(immutable)이라는 특성을 가지고 있습니다. 튜플은 괄호 ( ) 안에 쉼표로 구분된 요소를 넣어 생성하며, 요소가 하나인 튜플을 생성할 때는 요소 뒤에 쉼표를 붙여야 합니다.\\n    </p>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">비유</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        튜플을 생각하면 '시간 여행'을 떠올려 보세요. 시간 여행을 하면 과거로 돌아갈 수 있지만, 이미 지나간 과거의 사건을 바꿀 수는 없습니다. 마찬가지로 튜플은 한 번 생성된 후에는 그 값들을 바꿀 수 없습니다. 대체 비유로는 '커피 캡슐'을 생각해볼 수 있습니다. 커피 캡슐은 한 번 만들어지면 그 안의 커피를 바꿀 수 없습니다.\\n    </p>\\n    <div class=\\\"bg-gray-900 rounded-lg p-4 mt-4\\\">\\n        <pre class=\\\"text-white font-mono text-sm\\\">my_tuple = (1, 2, 3)\\nprint(my_tuple[1])</pre>\\n        <p class=\\\"text-green-400 mt-2\\\"># 출력 결과: 2</p>\\n    </div>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">핵심 포인트</h2>\\n    <ul class=\\\"list-disc list-inside space-y-2 text-gray-800\\\">\\n        <li>튜플은 불변입니다. 즉, 튜플의 요소는 생성 후에 변경하거나 삭제할 수 없습니다. 예: my_tuple[0] = 4 # 에러 발생</li>\\n        <li>튜플은 괄호( )를 사용하여 생성하며, 요소들은 쉼표로 구분합니다. 예: my_tuple = (1, 2, 3)</li>\\n        <li>요소가 하나인 튜플을 생성할 때는 요소 뒤에 쉼표를 붙여야 합니다. 예: single_element_tuple = (4,)</li>\\n        <li>튜플은 인덱싱과 슬라이싱이 가능합니다. 예: my_tuple[1], my_tuple[1:3]</li>\\n    </ul>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold mb-3\\\">주의사항</h2>\\n    <ul class=\\\"list-decimal list-inside space-y-2 text-gray-800\\\">\\n        <li>튜플은 불변이므로, 요소를 변경하거나 삭제하려고 하면 에러가 발생합니다.</li>\\n        <li>요소가 하나인 튜플을 생성할 때 요소 뒤에 쉼표를 붙여야 합니다. 쉼표가 없으면 그냥 숫자로 인식됩니다.</li>\\n        <li>튜플의 요소로 리스트 같은 가변 객체를 넣을 수 있지만, 그 리스트 자체를 변경하거나 삭제할 수는 없습니다.</li>\\n    </ul>\\n</section>\",\n    \"topic\": \"튜플\"\n}\n```\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실습 환경 설정</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        VSCode를 실행하고, 왼쪽 패널에 위치한 Explorer 탭을 클릭해서 새 파일을 만들어주세요. 새 파일 버튼은 Explorer 탭의 상단에서 찾을 수 있습니다. 새 파일을 만들고 난 후에는, 이 파일에 파이썬 코드를 작성할 것이므로 확장자를 .py로 설정해주세요. 예를 들어, \"tuple_practice.py\"라고 이름을 지어줍니다.\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">이론 예제 실습</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        이제, 방금 만든 'tuple_practice.py' 파일에 아래의 파이썬 코드를 작성해보세요. 이 코드는 튜플을 생성하고, 튜플의 두 번째 요소를 출력하는 간단한 코드입니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">my_tuple = (1, 2, 3)\nprint(my_tuple[1])</pre>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실행 방법</h2>\n    <ol class=\"list-decimal list-inside space-y-4 text-gray-800\">\n        <li>VSCode의 상단 메뉴에서 '파일' > '저장'을 선택하거나 단축키 Ctrl+S를 눌러 'tuple_practice.py' 파일을 저장합니다.</li>\n        <li>그 다음, 상단 메뉴에서 '뷰' > '터미널'을 선택하거나 단축키 Ctrl+`를 눌러 터미널을 엽니다.</li>\n        <li>터미널 창에서 'python tuple_practice.py'를 입력하고 엔터를 눌러 코드를 실행합니다.</li>\n        <li>터미널 창에 '2'라는 결과가 출력되면, 코드가 정상적으로 실행된 것입니다!</li>\n    </ol>\n</section>\n```"
}