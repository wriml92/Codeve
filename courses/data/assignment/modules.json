{
  "topic_id": "modules",
  "topic_name": "모듈",
  "content": "## 입력\n```json\n{\n    \"theory_content\": \"모듈이란, 특정 기능을 수행하는 코드의 집합을 의미합니다. 이를 비유하자면, 레고 블록과 같습니다. 레고 블록 하나하나가 특정 기능을 수행하며, 필요할 때마다 블록을 조립하여 다양한 모양과 기능의 물체를 만들 수 있습니다. 파이썬에서는 이러한 레고 블록처럼 모듈을 만들어 필요할 때마다 재사용할 수 있습니다.\",\n    \"practice_content\": \"다음은 파이썬에서 모듈을 이용하는 방법입니다. 우선, 특정 기능을 수행하는 함수를 정의하고 이를 모듈로 만듭니다.\\n\\n# shapes.py\\n\\ndef circle_area(r):\\n    return 3.14 * r * r\\n\\ndef rectangle_area(w, h):\\n    return w * h\\n\\n이후, 다른 파이썬 코드에서 이 모듈을 import하여 사용할 수 있습니다.\\n\\n# main.py\\n\\nimport shapes\\n\\nprint(shapes.circle_area(5))\\nprint(shapes.rectangle_area(4, 5))\",\n    \"topic\": \"모듈\"\n}\n```\n\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 1: 개념 이해</h2>\n    <p class=\"mb-4\">모듈의 개념을 레고 블록에 비유하였습니다. 다음 중 이 비유를 가장 잘 설명하는 것은 무엇일까요?</p>\n    <ol class=\"list-decimal list-inside space-y-2 mb-4\">\n        <li>레고 블록은 각각 다른 모양과 색깔을 가지고 있으며, 이들을 조합하여 다양한 물체를 만들 수 있다.</li>\n        <li>레고 블록은 단독으로는 큰 의미가 없지만, 다른 블록들과 결합하면 복잡한 구조를 만들 수 있다.</li>\n        <li>레고 블록은 필요에 따라 추가하거나 빼면서 다양한 기능을 수행할 수 있다.</li>\n    </ol>\n    <div class=\"hidden\">정답: 3. 레고 블록은 필요에 따라 추가하거나 빼면서 다양한 기능을 수행할 수 있다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 2: 코드 분석</h2>\n    <p class=\"mb-4\">다음 코드의 실행 결과를 예측해보세요.</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\n# main.py\n\nimport shapes\n\nprint(shapes.circle_area(10))\nprint(shapes.rectangle_area(2, 3))\n        </pre>\n    </div>\n    <div class=\"hidden\">정답: 314.0, 6. 코드는 shapes 모듈의 circle_area 함수와 rectangle_area 함수를 호출합니다. circle_area(10)은 반지름이 10인 원의 넓이를 계산하여 314.0을 반환하고, rectangle_area(2, 3)은 가로길이가 2, 세로길이가 3인 직사각형의 넓이를 계산하여 6을 반환합니다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 3: 코드 구현</h2>\n    <p class=\"mb-4\">shapes 모듈에 삼각형의 넓이를 계산하는 함수 triangle_area(b, h)를 추가하고, 이 함수를 호출하는 코드를 작성해보세요.</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\n# shapes.py\n\ndef circle_area(r):\n    return 3.14 * r * r\n\ndef rectangle_area(w, h):\n    return w * h\n\n# 여기에 triangle_area 함수를 작성하세요.\n        </pre>\n    </div>\n    <div class=\"hidden\">\n        테스트 케이스:\n        triangle_area(3, 4) => 6.0\n        triangle_area(5, 2) => 5.0\n        정답 예시:\n        def triangle_area(b, h):\n            return 0.5 * b * h\n    </div>\n</section>\n```",
  "course_id": "python",
  "theory_based_on": "```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">개념 소개</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        모듈이란, 파이썬에서 특정 기능을 수행하는 코드를 모아놓은 파일을 말해요. 이 파일에는 함수, 변수, 클래스 등이 포함될 수 있어요. 모듈을 사용하면 코드를 재사용할 수 있고, 코드의 관리가 편리해져요. 예를 들어, 수학 관련 함수들을 모아놓은 모듈이 있다면, 이 모듈을 불러와서 사용하면 됩니다. 파이썬에서는 import 문을 사용해 모듈을 불러올 수 있어요.\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">비유</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        모듈을 공구상자에 비유할 수 있어요. 공구상자에는 망치, 드라이버, 플라이어 등 다양한 도구들이 있죠. 이 도구들을 각각 만들어서 사용할 수도 있지만, 이미 준비된 공구상자에서 필요한 도구를 꺼내서 사용하는 것이 훨씬 효율적이죠. 모듈도 마찬가지로, 모듈에 미리 정의된 함수나 변수를 꺼내서 사용하는 것이 효율적입니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">import math\nprint(math.sqrt(16))</pre>\n        <p class=\"text-green-400 mt-2\"># 출력 결과: 4.0</p>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">핵심 포인트</h2>\n    <ul class=\"list-disc list-inside space-y-2 text-gray-800\">\n        <li>모듈은 특정 기능을 수행하는 코드를 모아놓은 파일입니다. 예: 'import math'</li>\n        <li>모듈을 사용하면 코드를 재사용하고, 관리가 편리해집니다.</li>\n        <li>파이썬에서는 import 문을 사용해서 모듈을 불러올 수 있습니다. 예: 'from datetime import datetime'</li>\n    </ul>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold mb-3\">주의사항</h2>\n    <ul class=\"list-decimal list-inside space-y-2 text-gray-800\">\n        <li>모듈의 이름이 파이썬 예약어와 같으면 안 됩니다. 예를 들어, 'import'라는 이름의 모듈을 만들면 안 됩니다.</li>\n        <li>모듈을 임포트할 때는 모듈이 현재 디렉토리에 있거나, 파이썬 라이브러리가 저장된 디렉토리에 있어야 합니다.</li>\n        <li>모듈을 임포트하면, 그 모듈에 있는 모든 코드가 실행됩니다. 따라서 모듈 내에 있는 코드는 함수나 클래스 정의 등, 임포트해도 문제가 없는 코드들로 구성해야 합니다.</li>\n    </ul>\n</section>\n```",
  "practice_based_on": "## 입력\n```json\n{\n    \"theory_content\": \"모듈이란, 파이썬에서 특정 기능을 수행하는 코드를 모아놓은 파일을 말해요. 이 파일에는 함수, 변수, 클래스 등이 포함될 수 있어요. 모듈을 사용하면 코드를 재사용할 수 있고, 코드의 관리가 편리해져요. 예를 들어, 수학 관련 함수들을 모아놓은 모듈이 있다면, 이 모듈을 불러와서 사용하면 됩니다. 파이썬에서는 import 문을 사용해 모듈을 불러올 수 있어요.\",\n    \"topic\": \"모듈\"\n}\n```\n\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실습 환경 설정</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        먼저, VSCode를 실행해 주세요. 만약 아직 설치하지 않았다면, 공식 웹사이트에서 다운로드 받을 수 있어요. VSCode를 처음 사용하시는 분들은 조금 복잡해 보일 수 있는데 걱정 마세요, 천천히 익혀 나가면 됩니다. Python 확장자를 설치해두셨다면, 파이썬 코드를 작성하고 실행하는 데 문제는 없을 거예요.\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">이론 예제 실습</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        이제, 이론에서 배운 내용을 바탕으로 실제로 코드를 작성해볼게요. 우리는 파이썬의 math 모듈을 불러와서, 그 안의 sqrt 함수를 사용해 볼 거에요. 이 함수는 제곱근을 계산해주는 함수라서, math.sqrt(16)을 실행하면 4.0이라는 결과를 얻을 수 있어요.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">import math\nprint(math.sqrt(16))</pre>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실행 방법</h2>\n    <ol class=\"list-decimal list-inside space-y-4 text-gray-800\">\n        <li>VSCode의 왼쪽 상단에 있는 'File'을 클릭한 후 'New File'을 클릭해서 새 파일을 만들어주세요.</li>\n        <li>새로 만든 파일에 방금 위에서 본 코드를 입력하세요.</li>\n        <li>코드를 입력했다면, 'File' - 'Save'를 클릭해서 파일을 저장해주세요. 파일 이름은 원하는 대로 지어도 되지만, 반드시 '.py' 확장자로 저장해야 해요.</li>\n        <li>마지막으로, 상단 메뉴의 'Run'을 클릭한 후 'Run Python File in Terminal'을 선택하면 코드가 실행되고, 결과가 터미널에 출력됩니다.</li>\n    </ol>\n</section>\n```"
}