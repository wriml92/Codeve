{
  "topic_id": "strings",
  "topic_name": "문자열",
  "content": "## 입력\n```json\n{\n    \"theory_content\": \"문자열은 단어나 문장을 나타내는 데 사용되는 시퀀스 데이터 타입입니다. 문자열은 순서가 있는 문자의 모음이며, 이를 비유하자면 기차칸에 알파벳이나 숫자, 특수문자 등이 채워진 기차와 같습니다. 각 칸에 채워진 문자는 변경할 수 없습니다.\",\n    \"practice_content\": \"Python에서 문자열은 작은따옴표('') 또는 큰따옴표(\\\"\\\")로 둘러싸여 있으며, 문자열의 길이를 확인하려면 len() 함수를 사용합니다. 문자열 내부의 특정 문자에 접근하려면 인덱스를 사용하며, 이때 인덱스는 0부터 시작합니다. 예를 들어, 'python'이라는 문자열에서 'y'에 접근하려면 str[1]을 사용합니다.\",\n    \"topic\": \"문자열\"\n}\n```\n\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 1: 개념 이해</h2>\n    <p class=\"mb-4\">다음 중 문자열에 대한 설명으로 가장 적절한 것은 무엇인가요?</p>\n    <ol class=\"list-decimal list-inside space-y-2 mb-4\">\n        <li>문자열은 순서가 없는 데이터 타입이다.</li>\n        <li>문자열은 변경 가능한 데이터 타입이다.</li>\n        <li>문자열은 숫자만을 포함할 수 있다.</li>\n        <li>문자열은 순서가 있는 데이터 타입이며, 한 번 생성하면 변경할 수 없다.</li>\n    </ol>\n    <div class=\"hidden\">정답: 4번. 문자열은 순서가 있는 데이터 타입이며, 한 번 생성하면 변경할 수 없다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 2: 코드 분석</h2>\n    <p class=\"mb-4\">다음 코드의 출력 결과는 무엇일까요?</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\n            str = 'Hello, Python!'\n            print(len(str))\n            print(str[7])\n        </pre>\n    </div>\n    <div class=\"hidden\">정답: 코드를 실행하면 먼저 문자열의 길이인 14가 출력되고, 다음으로 'P'가 출력됩니다. 문자열의 인덱스는 0부터 시작하므로 str[7]은 'P'를 가리킵니다.</div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-bold mb-4\">퀴즈 3: 코드 구현</h2>\n    <p class=\"mb-4\">주어진 문자열의 가장 처음과 끝 문자를 출력하는 파이썬 코드를 작성해보세요.</p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mb-4\">\n        <pre class=\"text-white font-mono text-sm\">\n            str = 'Python is fun!'\n            # 여기에 코드를 작성하세요.\n        </pre>\n    </div>\n    <div class=\"hidden\">\n        테스트 케이스:\n        str = 'Hello, World!'\n        str = 'Python Programming'\n        str = 'AI is the future'\n        정답 예시:\n        <pre class=\"text-white font-mono text-sm\">\n            print(str[0], str[-1])\n        </pre>\n    </div>\n</section>\n```",
  "course_id": "python",
  "theory_based_on": "```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">문자열 소개</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        문자열은 컴퓨터 프로그래밍에서 매우 중요한 자료형입니다. 파이썬에서 문자열은 단어나 문장 등 여러 문자들을 담을 수 있는 자료형을 말해요. 문자열은 작은따옴표(' ') 또는 큰따옴표(\" \")로 둘러쌓여 있어요.\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">비유</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        문자열을 비유하자면, '열차' 같아요. 열차는 여러 칸으로 이루어져 있죠. 이와 마찬가지로 문자열도 여러 문자들이 연결된 것이라고 볼 수 있어요. \n        대체 비유를 들자면, '구슬 줄'이라고 생각하면 돼요. 구슬 줄에는 여러 구슬이 연결되어 있는데, 이것이 바로 문자열에서 문자들이 연결되어 있는 모습을 잘 나타냅니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">greeting = \"Hello, World!\"</pre>\n        <p class=\"text-green-400 mt-2\"># 출력 결과: Hello, World!</p>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">핵심 포인트</h2>\n    <ul class=\"list-disc list-inside space-y-2 text-gray-800\">\n        <li>문자열은 작은따옴표(' ') 또는 큰따옴표(\" \")로 둘러쌓여야 합니다. 예: <code>name = \"Python\"</code></li>\n        <li>문자열은 더하기와 곱하기 연산을 지원합니다. 더하기는 문자열을 연결하고, 곱하기는 문자열을 반복합니다. 예: <code>print(\"Python\" + \" programming\")</code> 혹은 <code>print(\"Python \" * 3)</code></li>\n        <li>문자열에 특정 문자나 문자열이 있는지 확인하려면 <code>in</code> 키워드를 사용합니다. 예: <code>print(\"P\" in \"Python\")</code></li>\n        <li>문자열의 길이를 확인하려면 <code>len()</code> 함수를 사용합니다. 예: <code>print(len(\"Python\"))</code></li>\n    </ul>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold mb-3\">주의사항</h2>\n    <ul class=\"list-decimal list-inside space-y-2 text-gray-800\">\n        <li>문자열 안에 따옴표를 넣고 싶다면, 다른 종류의 따옴표를 사용하거나 이스케이프 문자를 사용해야 합니다. 예: <code>print('He said, \"Hello!\"')</code> 또는 <code>print(\"He said, \\\"Hello!\\\"\")</code></li>\n        <li>문자열은 변경할 수 없는(immutable) 자료형입니다. 즉, 생성된 후에는 내부의 값을 변경할 수 없습니다.</li>\n    </ul>\n</section>\n```",
  "practice_based_on": "## 입력\n```json\n{\n    \"theory_content\": \"<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">문자열 소개</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        문자열은 컴퓨터 프로그래밍에서 매우 중요한 자료형입니다. 파이썬에서 문자열은 단어나 문장 등 여러 문자들을 담을 수 있는 자료형을 말해요. 문자열은 작은따옴표(' ') 또는 큰따옴표(\\\" \\\")로 둘러쌓여 있어요.\\n    </p>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">비유</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        문자열을 비유하자면, '열차' 같아요. 열차는 여러 칸으로 이루어져 있죠. 이와 마찬가지로 문자열도 여러 문자들이 연결된 것이라고 볼 수 있어요. \\n        대체 비유를 들자면, '구슬 줄'이라고 생각하면 돼요. 구슬 줄에는 여러 구슬이 연결되어 있는데, 이것이 바로 문자열에서 문자들이 연결되어 있는 모습을 잘 나타냅니다.\\n    </p>\\n    <div class=\\\"bg-gray-900 rounded-lg p-4 mt-4\\\">\\n        <pre class=\\\"text-white font-mono text-sm\\\">greeting = \\\"Hello, World!\\\"</pre>\\n        <p class=\\\"text-green-400 mt-2\\\"># 출력 결과: Hello, World!</p>\\n    </div>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">핵심 포인트</h2>\\n    <ul class=\\\"list-disc list-inside space-y-2 text-gray-800\\\">\\n        <li>문자열은 작은따옴표(' ') 또는 큰따옴표(\\\" \\\")로 둘러쌓여야 합니다. 예: <code>name = \\\"Python\\\"</code></li>\\n        <li>문자열은 더하기와 곱하기 연산을 지원합니다. 더하기는 문자열을 연결하고, 곱하기는 문자열을 반복합니다. 예: <code>print(\\\"Python\\\" + \\\" programming\\\")</code> 혹은 <code>print(\\\"Python \\\" * 3)</code></li>\\n        <li>문자열에 특정 문자나 문자열이 있는지 확인하려면 <code>in</code> 키워드를 사용합니다. 예: <code>print(\\\"P\\\" in \\\"Python\\\")</code></li>\\n        <li>문자열의 길이를 확인하려면 <code>len()</code> 함수를 사용합니다. 예: <code>print(len(\\\"Python\\\"))</code></li>\\n    </ul>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold mb-3\\\">주의사항</h2>\\n    <ul class=\\\"list-decimal list-inside space-y-2 text-gray-800\\\">\\n        <li>문자열 안에 따옴표를 넣고 싶다면, 다른 종류의 따옴표를 사용하거나 이스케이프 문자를 사용해야 합니다. 예: <code>print('He said, \\\"Hello!\\\"')</code> 또는 <code>print(\\\"He said, \\\\\\\"Hello!\\\\\\\"\\\")</code></li>\\n        <li>문자열은 변경할 수 없는(immutable) 자료형입니다. 즉, 생성된 후에는 내부의 값을 변경할 수 없습니다.</li>\\n    </ul>\\n</section>\",\n    \"topic\": \"문자열\"\n}\n```\n\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실습 환경 설정</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        VSCode를 실행하세요. 좌측 메뉴에서 파일 탐색기 아이콘을 클릭하고, 상단에 위치한 '새 파일' 아이콘을 클릭하여 새 파일을 만들어주세요. 파일명을 'string_practice.py'로 지정하고 저장하세요. 이제 우리가 실습할 파이썬 파일이 준비되었어요!\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">이론 예제 실습</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        이제 'string_practice.py' 파일이 열려있는지 확인하세요. 해당 파일에 이론에서 배운 예제를 입력해볼 거예요. 다음과 같이 코드를 입력해보세요: \n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">greeting = \"Hello, World!\"\nprint(greeting)\nprint(\"Python\" + \" programming\")\nprint(\"Python \" * 3)\nprint(\"P\" in \"Python\")\nprint(len(\"Python\"))</pre>\n    </div>\n    <p class=\"text-gray-800 leading-relaxed mt-4\">\n        이 코드를 통해 문자열의 기본적인 사용법을 실습해보는 거예요. 각 줄의 실행 결과를 예상해보세요!\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실행 방법</h2>\n    <ol class=\"list-decimal list-inside space-y-4 text-gray-800\">\n        <li>위에서 작성한 'string_practice.py' 파일을 열어보세요.</li>\n        <li>입력한 코드를 확인하세요.</li>\n        <li>파일을 저장하세요. (Ctrl + S 또는 File > Save)</li>\n        <li>코드를 실행하세요. 상단 메뉴의 Run > Run Without Debugging을 클릭하거나 단축키 F5를 누르면 코드가 실행됩니다.</li>\n    </ol>\n</section>\n```"
}