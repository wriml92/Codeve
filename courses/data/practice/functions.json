{
  "topic_id": "functions",
  "topic_name": "함수",
  "content": "## 입력\n```json\n{\n    \"theory_content\": \"<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">개념 소개</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        함수는 파이썬에서 특정 동작을 수행하는 코드의 묶음입니다. 함수는 이름이 주어져 있고, 필요할 때 해당 이름을 호출해서 사용할 수 있습니다. \\n        또한, 함수는 입력(인자)을 받아 처리하고, 결과(리턴 값)을 출력할 수도 있습니다. \\n        함수를 사용하면 코드의 중복을 줄이고, 가독성을 높일 수 있습니다. \\n        게다가, 함수는 재사용성을 높여 코드의 효율성을 증가시킵니다. \\n    </p>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">비유</h2>\\n    <p class=\\\"text-gray-800 leading-relaxed\\\">\\n        함수를 레시피에 비유할 수 있습니다. 레시피는 음식을 만드는 순서와 방법을 담고 있고, 필요한 재료를 입력으로 받아 \\n        결과적으로 음식을 출력합니다. 이처럼 함수도 입력을 받아 처리하고 결과를 출력합니다. \\n        또 다른 비유로, 함수는 자판기와도 비슷합니다. 자판기에 돈을 넣고 버튼을 누르면, 원하는 음료가 나오는 방식처럼 \\n        함수도 원하는 인자를 넣고 함수를 호출하면, 원하는 결과를 얻을 수 있습니다.\\n    </p>\\n    <div class=\\\"bg-gray-900 rounded-lg p-4 mt-4\\\">\\n        <pre class=\\\"text-white font-mono text-sm\\\">\\ndef recipe(ingredient):\\n    dish = \\\"Delicious dish made with \\\" + ingredient\\n    return dish\\n\\nprint(recipe(\\\"chicken\\\"))</pre>\\n        <p class=\\\"text-green-400 mt-2\\\"># 출력 결과: Delicious dish made with chicken</p>\\n    </div>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold text-purple-600 mb-3\\\">핵심 포인트</h2>\\n    <ul class=\\\"list-disc list-inside space-y-2 text-gray-800\\\">\\n        <li>함수는 def 키워드로 시작합니다. 예: def function_name():</li>\\n        <li>함수 이름 뒤에 괄호가 오고, 그 다음에 콜론(:)이 붙습니다. 예: def function_name():</li>\\n        <li>함수는 인자를 받을 수 있습니다. 인자는 함수 이름 뒤의 괄호 안에 씁니다. 예: def function_name(argument):</li>\\n        <li>함수는 return 키워드를 사용해 결과를 반환할 수 있습니다. 예: return result</li>\\n        <li>함수를 호출하려면 함수 이름과 괄호를 씁니다. 필요하다면 괄호 안에 인자를 넣습니다. 예: function_name(argument)</li>\\n    </ul>\\n</section>\\n\\n<section class=\\\"mb-8\\\">\\n    <h2 class=\\\"text-lg font-semibold mb-3\\\">주의사항</h2>\\n    <ul class=\\\"list-decimal list-inside space-y-2 text-gray-800\\\">\\n        <li>함수 이름은 유일해야 합니다. 같은 이름을 가진 함수를 다시 정의하면, 이전의 함수는 덮어씌워집니다.</li>\\n        <li>함수를 호출하기 전에 반드시 함수를 먼저 정의해야 합니다.</li>\\n        <li>함수는 인자를 필요로 하지 않을 수도 있고, 하나 이상의 인자를 받을 수도 있습니다.</li>\\n        <li>함수가 값을 반환하지 않으면, None이 반환됩니다.</li>\\n    </ul>\\n</section>\",\n    \"topic\": \"함수\"\n}\n```\n\n## 출력\n```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실습 환경 설정</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        VSCode를 열고 새로운 파일을 생성해줍시다. 새로운 파일을 생성하려면 '파일' 메뉴를 클릭한 후 '새 파일'을 선택하면 됩니다. 이제 파이썬을 위한 실습 환경이 준비되었습니다!\n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">이론 예제 실습</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        방금 생성한 새 파일에 이론에서 배운 함수의 예제 코드를 입력해볼까요? 아래의 예제 코드를 그대로 복사하여 VSCode에 붙여넣어주세요. 이 코드는 'recipe'라는 이름의 함수를 정의하고, 이 함수를 'chicken'이라는 인자와 함께 호출합니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">\ndef recipe(ingredient):\n    dish = \"Delicious dish made with \" + ingredient\n    return dish\n\nprint(recipe(\"chicken\"))</pre>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">실행 방법</h2>\n    <ol class=\"list-decimal list-inside space-y-4 text-gray-800\">\n        <li>'파일' 메뉴를 클릭하고 '저장'을 선택하여, 이론에서 사용한 예제 코드를 저장해주세요. 파일 이름은 원하는 대로 지정하되, 확장자는 반드시 '.py'로 해야 합니다. 예를 들어, 'my_first_function.py'라고 하면 좋겠네요.</li>\n        <li>이제 코드를 실행해볼 시간입니다! '실행' 메뉴를 클릭한 후 '파이썬 파일 실행'을 선택하면, 우리가 작성한 코드가 실행됩니다.</li>\n        <li>코드 실행 결과는 하단의 '터미널' 창에서 확인할 수 있습니다. \"Delicious dish made with chicken\"라는 문구가 보이면 성공적으로 코드가 실행된 것입니다!</li>\n    </ol>\n</section>\n```",
  "course_id": "python",
  "theory_based_on": "```html\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">개념 소개</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        함수는 파이썬에서 특정 동작을 수행하는 코드의 묶음입니다. 함수는 이름이 주어져 있고, 필요할 때 해당 이름을 호출해서 사용할 수 있습니다. \n        또한, 함수는 입력(인자)을 받아 처리하고, 결과(리턴 값)을 출력할 수도 있습니다. \n        함수를 사용하면 코드의 중복을 줄이고, 가독성을 높일 수 있습니다. \n        게다가, 함수는 재사용성을 높여 코드의 효율성을 증가시킵니다. \n    </p>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">비유</h2>\n    <p class=\"text-gray-800 leading-relaxed\">\n        함수를 레시피에 비유할 수 있습니다. 레시피는 음식을 만드는 순서와 방법을 담고 있고, 필요한 재료를 입력으로 받아 \n        결과적으로 음식을 출력합니다. 이처럼 함수도 입력을 받아 처리하고 결과를 출력합니다. \n        또 다른 비유로, 함수는 자판기와도 비슷합니다. 자판기에 돈을 넣고 버튼을 누르면, 원하는 음료가 나오는 방식처럼 \n        함수도 원하는 인자를 넣고 함수를 호출하면, 원하는 결과를 얻을 수 있습니다.\n    </p>\n    <div class=\"bg-gray-900 rounded-lg p-4 mt-4\">\n        <pre class=\"text-white font-mono text-sm\">\ndef recipe(ingredient):\n    dish = \"Delicious dish made with \" + ingredient\n    return dish\n\nprint(recipe(\"chicken\"))</pre>\n        <p class=\"text-green-400 mt-2\"># 출력 결과: Delicious dish made with chicken</p>\n    </div>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold text-purple-600 mb-3\">핵심 포인트</h2>\n    <ul class=\"list-disc list-inside space-y-2 text-gray-800\">\n        <li>함수는 def 키워드로 시작합니다. 예: def function_name():</li>\n        <li>함수 이름 뒤에 괄호가 오고, 그 다음에 콜론(:)이 붙습니다. 예: def function_name():</li>\n        <li>함수는 인자를 받을 수 있습니다. 인자는 함수 이름 뒤의 괄호 안에 씁니다. 예: def function_name(argument):</li>\n        <li>함수는 return 키워드를 사용해 결과를 반환할 수 있습니다. 예: return result</li>\n        <li>함수를 호출하려면 함수 이름과 괄호를 씁니다. 필요하다면 괄호 안에 인자를 넣습니다. 예: function_name(argument)</li>\n    </ul>\n</section>\n\n<section class=\"mb-8\">\n    <h2 class=\"text-lg font-semibold mb-3\">주의사항</h2>\n    <ul class=\"list-decimal list-inside space-y-2 text-gray-800\">\n        <li>함수 이름은 유일해야 합니다. 같은 이름을 가진 함수를 다시 정의하면, 이전의 함수는 덮어씌워집니다.</li>\n        <li>함수를 호출하기 전에 반드시 함수를 먼저 정의해야 합니다.</li>\n        <li>함수는 인자를 필요로 하지 않을 수도 있고, 하나 이상의 인자를 받을 수도 있습니다.</li>\n        <li>함수가 값을 반환하지 않으면, None이 반환됩니다.</li>\n    </ul>\n</section>\n```"
}